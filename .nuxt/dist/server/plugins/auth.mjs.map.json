{"file":"auth.mjs","mappings":";;;;;;;;AAKA,MAAA,mDAAe,iBAAiB,CAAC,YAAY;AAC3C,QAAM,YAAY,aAAa;AAGvB,UAAA,KAAK,eAAe,MAAM;AAC1B,UAAA,QAAQ,UAAU,YAAY,EAAE;AACtC,QAAI,OAAO;AACT,gBAAU,SAAS,KAAK;AACxB,UAAI,UAAU,gBAAgB;AAC5B,kBAAU,OAAO;AAAA,MAAA;AAAA,IACnB;AAAA,EACF,CACD;AAGO,UAAA,KAAK,aAAa,CAAC,UAAmB;AACxC,QAAA,iBAAiB,UACnB,MAAM,QAAQ,SAAS,KAAK,KAAK,MAAM,QAAQ,SAAS,cAAc,IACrE;AACD,gBAAU,OAAO;AACjB,iBAAW,QAAQ;AAAA,IAAA;AAAA,EACrB,CACD;AAGD,UAAQ,QAAQ,QAAQ;AAAA,IACtB,iBAAiB,MAAM,UAAU;AAAA,IACjC,MAAM,MAAM,UAAU;AAAA,IACtB,OAAO,CAAC,UAAkB,UAAU,SAAS,KAAK;AAAA,IAClD,QAAQ,MAAM,UAAU,OAAO;AAAA,IAC/B,UAAU,MAAM,UAAU;AAAA,IAC1B,OAAO,MAAM,UAAU;AAAA,EAAA,CACxB;AACH,CAAC;","names":[],"sources":["../../../../plugins/auth.ts"],"sourcesContent":["import { defineNuxtPlugin } from '#app';\r\nimport { useAuthStore } from '~/stores/auth';\r\nimport { useCookie } from '#app';\r\nimport { navigateTo } from '#app';\r\n\r\nexport default defineNuxtPlugin((nuxtApp) => {\r\n  const authStore = useAuthStore();\r\n  \r\n  // Vérification du token à chaque navigation\r\n  nuxtApp.hook('app:created', () => {\r\n    const token = useCookie('auth_token').value;\r\n    if (token) {\r\n      authStore.setToken(token);\r\n      if (authStore.isTokenExpired) {\r\n        authStore.logout();\r\n      }\r\n    }\r\n  });\r\n\r\n  // Gestion des erreurs d'authentification\r\n  nuxtApp.hook('vue:error', (error: unknown) => {\r\n    if (error instanceof Error && (\r\n      error.message.includes('401') || error.message.includes('unauthorized')\r\n    )) {\r\n      authStore.logout();\r\n      navigateTo('/login');\r\n    }\r\n  });\r\n\r\n  // Ajouter des méthodes globales\r\n  nuxtApp.provide('auth', {\r\n    isAuthenticated: () => authStore.isAuthenticated,\r\n    user: () => authStore.user,\r\n    login: (token: string) => authStore.setToken(token),\r\n    logout: () => authStore.logout(),\r\n    hasError: () => authStore.hasError,\r\n    error: () => authStore.error\r\n  });\r\n});"],"version":3}