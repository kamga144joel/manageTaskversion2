{"version":3,"file":"DocumentTransform.mjs","sources":["../../../../../../../../../../../node_modules/@apollo/client/utilities/graphql/DocumentTransform.js"],"sourcesContent":["import { Trie } from \"@wry/trie\";\nimport { canUseWeakMap, canUseWeakSet } from \"../common/canUse.js\";\nimport { checkDocument } from \"./getFromAST.js\";\nimport { invariant } from \"../globals/index.js\";\nimport { WeakCache } from \"@wry/caches\";\nimport { wrap } from \"optimism\";\nimport { cacheSizes } from \"../caching/index.js\";\nfunction identity(document) {\n    return document;\n}\nvar DocumentTransform = /** @class */ (function () {\n    function DocumentTransform(transform, options) {\n        if (options === void 0) { options = Object.create(null); }\n        this.resultCache = canUseWeakSet ? new WeakSet() : new Set();\n        this.transform = transform;\n        if (options.getCacheKey) {\n            // Override default `getCacheKey` function, which returns [document].\n            this.getCacheKey = options.getCacheKey;\n        }\n        this.cached = options.cache !== false;\n        this.resetCache();\n    }\n    // This default implementation of getCacheKey can be overridden by providing\n    // options.getCacheKey to the DocumentTransform constructor. In general, a\n    // getCacheKey function may either return an array of keys (often including\n    // the document) to be used as a cache key, or undefined to indicate the\n    // transform for this document should not be cached.\n    DocumentTransform.prototype.getCacheKey = function (document) {\n        return [document];\n    };\n    DocumentTransform.identity = function () {\n        // No need to cache this transform since it just returns the document\n        // unchanged. This should save a bit of memory that would otherwise be\n        // needed to populate the `documentCache` of this transform.\n        return new DocumentTransform(identity, { cache: false });\n    };\n    DocumentTransform.split = function (predicate, left, right) {\n        if (right === void 0) { right = DocumentTransform.identity(); }\n        return Object.assign(new DocumentTransform(function (document) {\n            var documentTransform = predicate(document) ? left : right;\n            return documentTransform.transformDocument(document);\n        }, \n        // Reasonably assume both `left` and `right` transforms handle their own caching\n        { cache: false }), { left: left, right: right });\n    };\n    /**\n     * Resets the internal cache of this transform, if it has one.\n     */\n    DocumentTransform.prototype.resetCache = function () {\n        var _this = this;\n        if (this.cached) {\n            var stableCacheKeys_1 = new Trie(canUseWeakMap);\n            this.performWork = wrap(DocumentTransform.prototype.performWork.bind(this), {\n                makeCacheKey: function (document) {\n                    var cacheKeys = _this.getCacheKey(document);\n                    if (cacheKeys) {\n                        invariant(Array.isArray(cacheKeys), 77);\n                        return stableCacheKeys_1.lookupArray(cacheKeys);\n                    }\n                },\n                max: cacheSizes[\"documentTransform.cache\"],\n                cache: (WeakCache),\n            });\n        }\n    };\n    DocumentTransform.prototype.performWork = function (document) {\n        checkDocument(document);\n        return this.transform(document);\n    };\n    DocumentTransform.prototype.transformDocument = function (document) {\n        // If a user passes an already transformed result back to this function,\n        // immediately return it.\n        if (this.resultCache.has(document)) {\n            return document;\n        }\n        var transformedDocument = this.performWork(document);\n        this.resultCache.add(transformedDocument);\n        return transformedDocument;\n    };\n    DocumentTransform.prototype.concat = function (otherTransform) {\n        var _this = this;\n        return Object.assign(new DocumentTransform(function (document) {\n            return otherTransform.transformDocument(_this.transformDocument(document));\n        }, \n        // Reasonably assume both transforms handle their own caching\n        { cache: false }), {\n            left: this,\n            right: otherTransform,\n        });\n    };\n    return DocumentTransform;\n}());\nexport { DocumentTransform };\n//# sourceMappingURL=DocumentTransform.js.map"],"names":["DocumentTransform"],"mappings":";;;;;;;;AAOA,SAAS,SAAS,UAAU;AACjB,SAAA;AACX;AACI,IAAA;AAAA;AAAA,EAAmC,WAAY;AACtCA,aAAAA,mBAAkB,WAAW,SAAS;AAC3C,UAAI,YAAY,QAAQ;AAAY,kBAAA,uBAAO,OAAO,IAAI;AAAA,MAAA;AACtD,WAAK,cAAc,gBAAgB,oBAAI,QAAQ,wBAAQ,IAAI;AAC3D,WAAK,YAAY;AACjB,UAAI,QAAQ,aAAa;AAErB,aAAK,cAAc,QAAQ;AAAA,MAAA;AAE1B,WAAA,SAAS,QAAQ,UAAU;AAChC,WAAK,WAAW;AAAA,IAAA;AAOpBA,uBAAkB,UAAU,cAAc,SAAU,UAAU;AAC1D,aAAO,CAAC,QAAQ;AAAA,IACpB;AACAA,uBAAkB,WAAW,WAAY;AAIrC,aAAO,IAAIA,mBAAkB,UAAU,EAAE,OAAO,OAAO;AAAA,IAC3D;AACAA,uBAAkB,QAAQ,SAAU,WAAW,MAAM,OAAO;AACxD,UAAI,UAAU,QAAQ;AAAE,gBAAQA,mBAAkB,SAAS;AAAA,MAAA;AACpD,aAAA,OAAO,OAAO,IAAIA;AAAAA,QAAkB,SAAU,UAAU;AAC3D,cAAI,oBAAoB,UAAU,QAAQ,IAAI,OAAO;AAC9C,iBAAA,kBAAkB,kBAAkB,QAAQ;AAAA,QACvD;AAAA;AAAA,QAEA,EAAE,OAAO,MAAM;AAAA,MAAA,GAAI,EAAE,MAAY,OAAc;AAAA,IACnD;AAIAA,uBAAkB,UAAU,aAAa,WAAY;AACjD,UAAI,QAAQ;AACZ,UAAI,KAAK,QAAQ;AACT,YAAA,oBAAoB,IAAI,KAAK,aAAa;AAC9C,aAAK,cAAc,KAAKA,mBAAkB,UAAU,YAAY,KAAK,IAAI,GAAG;AAAA,UACxE,cAAc,SAAU,UAAU;AAC1B,gBAAA,YAAY,MAAM,YAAY,QAAQ;AAC1C,gBAAI,WAAW;AACX,wBAAU,MAAM,QAAQ,SAAS,GAAG,EAAE;AAC/B,qBAAA,kBAAkB,YAAY,SAAS;AAAA,YAAA;AAAA,UAEtD;AAAA,UACA,KAAK,WAAW,yBAAyB;AAAA,UACzC,OAAQ;AAAA,QAAA,CACX;AAAA,MAAA;AAAA,IAET;AACAA,uBAAkB,UAAU,cAAc,SAAU,UAAU;AAC1D,oBAAc,QAAQ;AACf,aAAA,KAAK,UAAU,QAAQ;AAAA,IAClC;AACAA,uBAAkB,UAAU,oBAAoB,SAAU,UAAU;AAGhE,UAAI,KAAK,YAAY,IAAI,QAAQ,GAAG;AACzB,eAAA;AAAA,MAAA;AAEP,UAAA,sBAAsB,KAAK,YAAY,QAAQ;AAC9C,WAAA,YAAY,IAAI,mBAAmB;AACjC,aAAA;AAAA,IACX;AACAA,uBAAkB,UAAU,SAAS,SAAU,gBAAgB;AAC3D,UAAI,QAAQ;AACL,aAAA,OAAO,OAAO,IAAIA;AAAAA,QAAkB,SAAU,UAAU;AAC3D,iBAAO,eAAe,kBAAkB,MAAM,kBAAkB,QAAQ,CAAC;AAAA,QAC7E;AAAA;AAAA,QAEA,EAAE,OAAO,MAAM;AAAA,MAAA,GAAI;AAAA,QACf,MAAM;AAAA,QACN,OAAO;AAAA,MAAA,CACV;AAAA,IACL;AACOA,WAAAA;AAAAA,EACT,EAAA;AAAA;","x_google_ignoreList":[0]}