{"file":"storeUtils.mjs","mappings":"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","names":[],"sources":["../../../../../../../../../../../node_modules/@apollo/client/utilities/graphql/storeUtils.js"],"sourcesContent":["import { newInvariantError } from \"../globals/index.js\";\nimport { isNonNullObject } from \"../common/objects.js\";\nimport { getFragmentFromSelection } from \"./fragments.js\";\nimport { canonicalStringify } from \"../common/canonicalStringify.js\";\nexport function makeReference(id) {\n    return { __ref: String(id) };\n}\nexport function isReference(obj) {\n    return Boolean(obj && typeof obj === \"object\" && typeof obj.__ref === \"string\");\n}\nexport function isDocumentNode(value) {\n    return (isNonNullObject(value) &&\n        value.kind === \"Document\" &&\n        Array.isArray(value.definitions));\n}\nfunction isStringValue(value) {\n    return value.kind === \"StringValue\";\n}\nfunction isBooleanValue(value) {\n    return value.kind === \"BooleanValue\";\n}\nfunction isIntValue(value) {\n    return value.kind === \"IntValue\";\n}\nfunction isFloatValue(value) {\n    return value.kind === \"FloatValue\";\n}\nfunction isVariable(value) {\n    return value.kind === \"Variable\";\n}\nfunction isObjectValue(value) {\n    return value.kind === \"ObjectValue\";\n}\nfunction isListValue(value) {\n    return value.kind === \"ListValue\";\n}\nfunction isEnumValue(value) {\n    return value.kind === \"EnumValue\";\n}\nfunction isNullValue(value) {\n    return value.kind === \"NullValue\";\n}\nexport function valueToObjectRepresentation(argObj, name, value, variables) {\n    if (isIntValue(value) || isFloatValue(value)) {\n        argObj[name.value] = Number(value.value);\n    }\n    else if (isBooleanValue(value) || isStringValue(value)) {\n        argObj[name.value] = value.value;\n    }\n    else if (isObjectValue(value)) {\n        var nestedArgObj_1 = {};\n        value.fields.map(function (obj) {\n            return valueToObjectRepresentation(nestedArgObj_1, obj.name, obj.value, variables);\n        });\n        argObj[name.value] = nestedArgObj_1;\n    }\n    else if (isVariable(value)) {\n        var variableValue = (variables || {})[value.name.value];\n        argObj[name.value] = variableValue;\n    }\n    else if (isListValue(value)) {\n        argObj[name.value] = value.values.map(function (listValue) {\n            var nestedArgArrayObj = {};\n            valueToObjectRepresentation(nestedArgArrayObj, name, listValue, variables);\n            return nestedArgArrayObj[name.value];\n        });\n    }\n    else if (isEnumValue(value)) {\n        argObj[name.value] = value.value;\n    }\n    else if (isNullValue(value)) {\n        argObj[name.value] = null;\n    }\n    else {\n        throw newInvariantError(96, name.value, value.kind);\n    }\n}\nexport function storeKeyNameFromField(field, variables) {\n    var directivesObj = null;\n    if (field.directives) {\n        directivesObj = {};\n        field.directives.forEach(function (directive) {\n            directivesObj[directive.name.value] = {};\n            if (directive.arguments) {\n                directive.arguments.forEach(function (_a) {\n                    var name = _a.name, value = _a.value;\n                    return valueToObjectRepresentation(directivesObj[directive.name.value], name, value, variables);\n                });\n            }\n        });\n    }\n    var argObj = null;\n    if (field.arguments && field.arguments.length) {\n        argObj = {};\n        field.arguments.forEach(function (_a) {\n            var name = _a.name, value = _a.value;\n            return valueToObjectRepresentation(argObj, name, value, variables);\n        });\n    }\n    return getStoreKeyName(field.name.value, argObj, directivesObj);\n}\nvar KNOWN_DIRECTIVES = [\n    \"connection\",\n    \"include\",\n    \"skip\",\n    \"client\",\n    \"rest\",\n    \"export\",\n    \"nonreactive\",\n];\n// Default stable JSON.stringify implementation used by getStoreKeyName. Can be\n// updated/replaced with something better by calling\n// getStoreKeyName.setStringify(newStringifyFunction).\nvar storeKeyNameStringify = canonicalStringify;\nexport var getStoreKeyName = Object.assign(function (fieldName, args, directives) {\n    if (args &&\n        directives &&\n        directives[\"connection\"] &&\n        directives[\"connection\"][\"key\"]) {\n        if (directives[\"connection\"][\"filter\"] &&\n            directives[\"connection\"][\"filter\"].length > 0) {\n            var filterKeys = directives[\"connection\"][\"filter\"] ?\n                directives[\"connection\"][\"filter\"]\n                : [];\n            filterKeys.sort();\n            var filteredArgs_1 = {};\n            filterKeys.forEach(function (key) {\n                filteredArgs_1[key] = args[key];\n            });\n            return \"\".concat(directives[\"connection\"][\"key\"], \"(\").concat(storeKeyNameStringify(filteredArgs_1), \")\");\n        }\n        else {\n            return directives[\"connection\"][\"key\"];\n        }\n    }\n    var completeFieldName = fieldName;\n    if (args) {\n        // We can't use `JSON.stringify` here since it's non-deterministic,\n        // and can lead to different store key names being created even though\n        // the `args` object used during creation has the same properties/values.\n        var stringifiedArgs = storeKeyNameStringify(args);\n        completeFieldName += \"(\".concat(stringifiedArgs, \")\");\n    }\n    if (directives) {\n        Object.keys(directives).forEach(function (key) {\n            if (KNOWN_DIRECTIVES.indexOf(key) !== -1)\n                return;\n            if (directives[key] && Object.keys(directives[key]).length) {\n                completeFieldName += \"@\".concat(key, \"(\").concat(storeKeyNameStringify(directives[key]), \")\");\n            }\n            else {\n                completeFieldName += \"@\".concat(key);\n            }\n        });\n    }\n    return completeFieldName;\n}, {\n    setStringify: function (s) {\n        var previous = storeKeyNameStringify;\n        storeKeyNameStringify = s;\n        return previous;\n    },\n});\nexport function argumentsObjectFromField(field, variables) {\n    if (field.arguments && field.arguments.length) {\n        var argObj_1 = {};\n        field.arguments.forEach(function (_a) {\n            var name = _a.name, value = _a.value;\n            return valueToObjectRepresentation(argObj_1, name, value, variables);\n        });\n        return argObj_1;\n    }\n    return null;\n}\nexport function resultKeyNameFromField(field) {\n    return field.alias ? field.alias.value : field.name.value;\n}\nexport function getTypenameFromResult(result, selectionSet, fragmentMap) {\n    var fragments;\n    for (var _i = 0, _a = selectionSet.selections; _i < _a.length; _i++) {\n        var selection = _a[_i];\n        if (isField(selection)) {\n            if (selection.name.value === \"__typename\") {\n                return result[resultKeyNameFromField(selection)];\n            }\n        }\n        else if (fragments) {\n            fragments.push(selection);\n        }\n        else {\n            fragments = [selection];\n        }\n    }\n    if (typeof result.__typename === \"string\") {\n        return result.__typename;\n    }\n    if (fragments) {\n        for (var _b = 0, fragments_1 = fragments; _b < fragments_1.length; _b++) {\n            var selection = fragments_1[_b];\n            var typename = getTypenameFromResult(result, getFragmentFromSelection(selection, fragmentMap).selectionSet, fragmentMap);\n            if (typeof typename === \"string\") {\n                return typename;\n            }\n        }\n    }\n}\nexport function isField(selection) {\n    return selection.kind === \"Field\";\n}\nexport function isInlineFragment(selection) {\n    return selection.kind === \"InlineFragment\";\n}\n//# sourceMappingURL=storeUtils.js.map"],"version":3}