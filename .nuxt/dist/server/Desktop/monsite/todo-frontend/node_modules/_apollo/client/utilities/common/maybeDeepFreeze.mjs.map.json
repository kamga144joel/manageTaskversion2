{"file":"maybeDeepFreeze.mjs","mappings":";AACO,SAAS,WAAW,OAAO;AAC9B,MAAI,UAAU,oBAAI,IAAI,CAAC,KAAK,CAAC;AACrB,UAAA,QAAQ,SAAU,KAAK;AAC3B,QAAI,gBAAgB,GAAG,KAAK,cAAc,GAAG,MAAM,KAAK;AACpD,aAAO,oBAAoB,GAAG,EAAE,QAAQ,SAAU,MAAM;AAChD,YAAA,gBAAgB,IAAI,IAAI,CAAC;AACjB,kBAAA,IAAI,IAAI,IAAI,CAAC;AAAA,MAAA,CAC5B;AAAA,IAAA;AAAA,EACL,CACH;AACM,SAAA;AACX;AACA,SAAS,cAAc,KAAK;AACxB,MAAI,WAAW,YAAY,SAAS,CAAC,OAAO,SAAS,GAAG,GAAG;AACnD,QAAA;AACA,aAAO,OAAO,GAAG;AAAA,aAEd,GAAG;AAIN,UAAI,aAAa;AACN,eAAA;AACL,YAAA;AAAA,IAAA;AAAA,EACV;AAEG,SAAA;AACX;AACO,SAAS,gBAAgB,KAAK;AAC7B,MAAA,WAAW,YAAY,OAAO;AAC9B,eAAW,GAAG;AAAA,EAAA;AAEX,SAAA;AACX;","names":[],"sources":["../../../../../../../../../../../node_modules/@apollo/client/utilities/common/maybeDeepFreeze.js"],"sourcesContent":["import { isNonNullObject } from \"./objects.js\";\nexport function deepFreeze(value) {\n    var workSet = new Set([value]);\n    workSet.forEach(function (obj) {\n        if (isNonNullObject(obj) && shallowFreeze(obj) === obj) {\n            Object.getOwnPropertyNames(obj).forEach(function (name) {\n                if (isNonNullObject(obj[name]))\n                    workSet.add(obj[name]);\n            });\n        }\n    });\n    return value;\n}\nfunction shallowFreeze(obj) {\n    if (globalThis.__DEV__ !== false && !Object.isFrozen(obj)) {\n        try {\n            Object.freeze(obj);\n        }\n        catch (e) {\n            // Some types like Uint8Array and Node.js's Buffer cannot be frozen, but\n            // they all throw a TypeError when you try, so we re-throw any exceptions\n            // that are not TypeErrors, since that would be unexpected.\n            if (e instanceof TypeError)\n                return null;\n            throw e;\n        }\n    }\n    return obj;\n}\nexport function maybeDeepFreeze(obj) {\n    if (globalThis.__DEV__ !== false) {\n        deepFreeze(obj);\n    }\n    return obj;\n}\n//# sourceMappingURL=maybeDeepFreeze.js.map"],"version":3}