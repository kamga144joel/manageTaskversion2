{"version":3,"file":"directives.mjs","sources":["../../../../../../../../../../../node_modules/@apollo/client/utilities/graphql/directives.js"],"sourcesContent":["import { invariant } from \"../globals/index.js\";\nimport { visit, BREAK, Kind } from \"graphql\";\nexport function shouldInclude(_a, variables) {\n    var directives = _a.directives;\n    if (!directives || !directives.length) {\n        return true;\n    }\n    return getInclusionDirectives(directives).every(function (_a) {\n        var directive = _a.directive, ifArgument = _a.ifArgument;\n        var evaledValue = false;\n        if (ifArgument.value.kind === \"Variable\") {\n            evaledValue =\n                variables && variables[ifArgument.value.name.value];\n            invariant(evaledValue !== void 0, 78, directive.name.value);\n        }\n        else {\n            evaledValue = ifArgument.value.value;\n        }\n        return directive.name.value === \"skip\" ? !evaledValue : evaledValue;\n    });\n}\nexport function getDirectiveNames(root) {\n    var names = [];\n    visit(root, {\n        Directive: function (node) {\n            names.push(node.name.value);\n        },\n    });\n    return names;\n}\nexport var hasAnyDirectives = function (names, root) {\n    return hasDirectives(names, root, false);\n};\nexport var hasAllDirectives = function (names, root) {\n    return hasDirectives(names, root, true);\n};\nexport function hasDirectives(names, root, all) {\n    var nameSet = new Set(names);\n    var uniqueCount = nameSet.size;\n    visit(root, {\n        Directive: function (node) {\n            if (nameSet.delete(node.name.value) && (!all || !nameSet.size)) {\n                return BREAK;\n            }\n        },\n    });\n    // If we found all the names, nameSet will be empty. If we only care about\n    // finding some of them, the < condition is sufficient.\n    return all ? !nameSet.size : nameSet.size < uniqueCount;\n}\nexport function hasClientExports(document) {\n    return document && hasDirectives([\"client\", \"export\"], document, true);\n}\nfunction isInclusionDirective(_a) {\n    var value = _a.name.value;\n    return value === \"skip\" || value === \"include\";\n}\nexport function getInclusionDirectives(directives) {\n    var result = [];\n    if (directives && directives.length) {\n        directives.forEach(function (directive) {\n            if (!isInclusionDirective(directive))\n                return;\n            var directiveArguments = directive.arguments;\n            var directiveName = directive.name.value;\n            invariant(directiveArguments && directiveArguments.length === 1, 79, directiveName);\n            var ifArgument = directiveArguments[0];\n            invariant(ifArgument.name && ifArgument.name.value === \"if\", 80, directiveName);\n            var ifValue = ifArgument.value;\n            // means it has to be a variable value if this is a valid @skip or @include directive\n            invariant(ifValue &&\n                (ifValue.kind === \"Variable\" || ifValue.kind === \"BooleanValue\"), 81, directiveName);\n            result.push({ directive: directive, ifArgument: ifArgument });\n        });\n    }\n    return result;\n}\n/** @internal */\nexport function getFragmentMaskMode(fragment) {\n    var _a, _b;\n    var directive = (_a = fragment.directives) === null || _a === void 0 ? void 0 : _a.find(function (_a) {\n        var name = _a.name;\n        return name.value === \"unmask\";\n    });\n    if (!directive) {\n        return \"mask\";\n    }\n    var modeArg = (_b = directive.arguments) === null || _b === void 0 ? void 0 : _b.find(function (_a) {\n        var name = _a.name;\n        return name.value === \"mode\";\n    });\n    if (globalThis.__DEV__ !== false) {\n        if (modeArg) {\n            if (modeArg.value.kind === Kind.VARIABLE) {\n                globalThis.__DEV__ !== false && invariant.warn(82);\n            }\n            else if (modeArg.value.kind !== Kind.STRING) {\n                globalThis.__DEV__ !== false && invariant.warn(83);\n            }\n            else if (modeArg.value.value !== \"migrate\") {\n                globalThis.__DEV__ !== false && invariant.warn(84, modeArg.value.value);\n            }\n        }\n    }\n    if (modeArg &&\n        \"value\" in modeArg.value &&\n        modeArg.value.value === \"migrate\") {\n        return \"migrate\";\n    }\n    return \"unmask\";\n}\n//# sourceMappingURL=directives.js.map"],"names":["_a"],"mappings":";;;AAEgB,SAAA,cAAc,IAAI,WAAW;AACzC,MAAI,aAAa,GAAG;AACpB,MAAI,CAAC,cAAc,CAAC,WAAW,QAAQ;AAC5B,WAAA;AAAA,EAAA;AAEX,SAAO,uBAAuB,UAAU,EAAE,MAAM,SAAUA,KAAI;AAC1D,QAAI,YAAYA,IAAG,WAAW,aAAaA,IAAG;AAC9C,QAAI,cAAc;AACd,QAAA,WAAW,MAAM,SAAS,YAAY;AACtC,oBACI,aAAa,UAAU,WAAW,MAAM,KAAK,KAAK;AACtD,gBAAU,gBAAgB,QAAQ,IAAI,UAAU,KAAK,KAAK;AAAA,IAAA,OAEzD;AACD,oBAAc,WAAW,MAAM;AAAA,IAAA;AAEnC,WAAO,UAAU,KAAK,UAAU,SAAS,CAAC,cAAc;AAAA,EAAA,CAC3D;AACL;AAgBgB,SAAA,cAAc,OAAO,MAAM,KAAK;AACxC,MAAA,UAAU,IAAI,IAAI,KAAK;AAC3B,MAAI,cAAc,QAAQ;AAC1B,QAAM,MAAM;AAAA,IACR,WAAW,SAAU,MAAM;AACnB,UAAA,QAAQ,OAAO,KAAK,KAAK,KAAK,MAAM,CAAC,OAAO,CAAC,QAAQ,OAAO;AACrD,eAAA;AAAA,MAAA;AAAA,IACX;AAAA,EACJ,CACH;AAGD,SAAO,MAAM,CAAC,QAAQ,OAAO,QAAQ,OAAO;AAChD;AACO,SAAS,iBAAiB,UAAU;AACvC,SAAO,YAAY,cAAc,CAAC,UAAU,QAAQ,GAAG,UAAU,IAAI;AACzE;AACA,SAAS,qBAAqB,IAAI;AAC1B,MAAA,QAAQ,GAAG,KAAK;AACb,SAAA,UAAU,UAAU,UAAU;AACzC;AACO,SAAS,uBAAuB,YAAY;AAC/C,MAAI,SAAS,CAAC;AACV,MAAA,cAAc,WAAW,QAAQ;AACtB,eAAA,QAAQ,SAAU,WAAW;AAChC,UAAA,CAAC,qBAAqB,SAAS;AAC/B;AACJ,UAAI,qBAAqB,UAAU;AAC/B,UAAA,gBAAgB,UAAU,KAAK;AACnC,gBAAU,sBAAsB,mBAAmB,WAAW,GAAG,IAAI,aAAa;AAC9E,UAAA,aAAa,mBAAmB,CAAC;AACrC,gBAAU,WAAW,QAAQ,WAAW,KAAK,UAAU,MAAM,IAAI,aAAa;AAC9E,UAAI,UAAU,WAAW;AAEf,gBAAA,YACL,QAAQ,SAAS,cAAc,QAAQ,SAAS,iBAAiB,IAAI,aAAa;AACvF,aAAO,KAAK,EAAE,WAAsB,WAAA,CAAwB;AAAA,IAAA,CAC/D;AAAA,EAAA;AAEE,SAAA;AACX;AAEO,SAAS,oBAAoB,UAAU;AAC1C,MAAI,IAAI;AACJ,MAAA,aAAa,KAAK,SAAS,gBAAgB,QAAQ,OAAO,SAAS,SAAS,GAAG,KAAK,SAAUA,KAAI;AAClG,QAAI,OAAOA,IAAG;AACd,WAAO,KAAK,UAAU;AAAA,EAAA,CACzB;AACD,MAAI,CAAC,WAAW;AACL,WAAA;AAAA,EAAA;AAEP,MAAA,WAAW,KAAK,UAAU,eAAe,QAAQ,OAAO,SAAS,SAAS,GAAG,KAAK,SAAUA,KAAI;AAChG,QAAI,OAAOA,IAAG;AACd,WAAO,KAAK,UAAU;AAAA,EAAA,CACzB;AACG,MAAA,WAAW,YAAY,OAAO;AAC9B,QAAI,SAAS;AACT,UAAI,QAAQ,MAAM,SAAS,KAAK,UAAU;AACtC,mBAAW,YAAY,SAAS,UAAU,KAAK,EAAE;AAAA,MAE5C,WAAA,QAAQ,MAAM,SAAS,KAAK,QAAQ;AACzC,mBAAW,YAAY,SAAS,UAAU,KAAK,EAAE;AAAA,MAE5C,WAAA,QAAQ,MAAM,UAAU,WAAW;AACxC,mBAAW,YAAY,SAAS,UAAU,KAAK,IAAI,QAAQ,MAAM,KAAK;AAAA,MAAA;AAAA,IAC1E;AAAA,EACJ;AAEJ,MAAI,WACA,WAAW,QAAQ,SACnB,QAAQ,MAAM,UAAU,WAAW;AAC5B,WAAA;AAAA,EAAA;AAEJ,SAAA;AACX;","x_google_ignoreList":[0]}