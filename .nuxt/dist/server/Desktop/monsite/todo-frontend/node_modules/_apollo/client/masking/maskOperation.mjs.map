{"version":3,"file":"maskOperation.mjs","sources":["../../../../../../../../../../node_modules/@apollo/client/masking/maskOperation.js"],"sourcesContent":["import { invariant } from \"../utilities/globals/index.js\";\nimport { createFragmentMap, getFragmentDefinitions, getOperationDefinition, } from \"../utilities/index.js\";\nimport { maskDefinition } from \"./maskDefinition.js\";\nimport { MapImpl, SetImpl, warnOnImproperCacheImplementation, } from \"./utils.js\";\n/** @internal */\nexport function maskOperation(data, document, cache) {\n    var _a;\n    if (!cache.fragmentMatches) {\n        if (globalThis.__DEV__ !== false) {\n            warnOnImproperCacheImplementation();\n        }\n        return data;\n    }\n    var definition = getOperationDefinition(document);\n    invariant(definition, 51);\n    if (data == null) {\n        // Maintain the original `null` or `undefined` value\n        return data;\n    }\n    return maskDefinition(data, definition.selectionSet, {\n        operationType: definition.operation,\n        operationName: (_a = definition.name) === null || _a === void 0 ? void 0 : _a.value,\n        fragmentMap: createFragmentMap(getFragmentDefinitions(document)),\n        cache: cache,\n        mutableTargets: new MapImpl(),\n        knownChanged: new SetImpl(),\n    });\n}\n//# sourceMappingURL=maskOperation.js.map"],"names":[],"mappings":";;;;;;AAKgB,SAAA,cAAc,MAAM,UAAU,OAAO;AAC7C,MAAA;AACA,MAAA,CAAC,MAAM,iBAAiB;AACpB,QAAA,WAAW,YAAY,OAAO;AACI,wCAAA;AAAA,IAAA;AAE/B,WAAA;AAAA,EAAA;AAEP,MAAA,aAAa,uBAAuB,QAAQ;AAChD,YAAU,YAAY,EAAE;AACxB,MAAI,QAAQ,MAAM;AAEP,WAAA;AAAA,EAAA;AAEJ,SAAA,eAAe,MAAM,WAAW,cAAc;AAAA,IACjD,eAAe,WAAW;AAAA,IAC1B,gBAAgB,KAAK,WAAW,UAAU,QAAQ,OAAO,SAAS,SAAS,GAAG;AAAA,IAC9E,aAAa,kBAAkB,uBAAuB,QAAQ,CAAC;AAAA,IAC/D;AAAA,IACA,gBAAgB,IAAI,QAAQ;AAAA,IAC5B,cAAc,IAAI,QAAQ;AAAA,EAAA,CAC7B;AACL;","x_google_ignoreList":[0]}