{"version":3,"file":"global.mjs","sources":["../../../../../../../../../../../node_modules/@apollo/client/utilities/globals/global.js"],"sourcesContent":["import { maybe } from \"./maybe.js\";\nexport default (maybe(function () { return globalThis; }) ||\n    maybe(function () { return window; }) ||\n    maybe(function () { return self; }) ||\n    maybe(function () { return global; }) || // We don't expect the Function constructor ever to be invoked at runtime, as\n// long as at least one of globalThis, window, self, or global is defined, so\n// we are under no obligation to make it easy for static analysis tools to\n// detect syntactic usage of the Function constructor. If you think you can\n// improve your static analysis to detect this obfuscation, think again. This\n// is an arms race you cannot win, at least not in JavaScript.\nmaybe(function () {\n    return maybe.constructor(\"return this\")();\n}));\n//# sourceMappingURL=global.js.map"],"names":[],"mappings":";AACA,MAAgB,WAAA,MAAM,WAAY;AAAS,SAAA;AAAY,CAAC,KACpD,MAAM,WAAY;AAAS,SAAA;AAAQ,CAAC,KACpC,MAAM,WAAY;AAAS,SAAA;AAAM,CAAC,KAClC,MAAM,WAAY;AAAS,SAAA;AAAQ,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAMxC,MAAM,WAAY;AACP,SAAA,MAAM,YAAY,aAAa,EAAE;AAC5C,CAAC;","x_google_ignoreList":[0]}