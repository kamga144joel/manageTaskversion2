{"file":"nodeStream.mjs","mappings":";AAKe,SAAS,mBAAmB,QAAQ;AAC/C,MAAI,UAAU;AACd,MAAI,QAAQ;AACZ,MAAI,OAAO;AACX,MAAI,OAAO,CAAE;AACb,MAAI,UAAU,CAAE;AAChB,WAAS,OAAO,OAAO;AACnB,QAAI;AACA;AACJ,QAAI,QAAQ,QAAQ;AAChB,UAAI,aAAa,QAAQ,MAAO;AAChC,UAAI,MAAM,QAAQ,UAAU,KAAK,WAAW,CAAC,GAAG;AAC5C,eAAO,WAAW,CAAC,EAAE,EAAE,OAAO,OAAO,MAAM,OAAO;AAAA,MAClE;AAAA,IACA;AACQ,SAAK,KAAK,KAAK;AAAA,EACvB;AACI,WAAS,QAAQ,KAAK;AAClB,YAAQ;AACR,QAAI,MAAM,QAAQ,MAAO;AACzB,QAAI,QAAQ,SAAU,MAAM;AACxB,WAAK,CAAC,EAAE,GAAG;AAAA,IACvB,CAAS;AACD,KAAC,WAAW,QAAS;AAAA,EAC7B;AACI,WAAS,QAAQ;AACb,WAAO;AACP,QAAI,MAAM,QAAQ,MAAO;AACzB,QAAI,QAAQ,SAAU,MAAM;AACxB,WAAK,CAAC,EAAE,EAAE,OAAO,QAAW,MAAM,MAAM;AAAA,IACpD,CAAS;AACD,KAAC,WAAW,QAAS;AAAA,EAC7B;AACI,YAAU,WAAY;AAClB,cAAU;AACV,WAAO,eAAe,QAAQ,MAAM;AACpC,WAAO,eAAe,SAAS,OAAO;AACtC,WAAO,eAAe,OAAO,KAAK;AAClC,WAAO,eAAe,UAAU,KAAK;AACrC,WAAO,eAAe,SAAS,KAAK;AAAA,EACvC;AACD,SAAO,GAAG,QAAQ,MAAM;AACxB,SAAO,GAAG,SAAS,OAAO;AAC1B,SAAO,GAAG,OAAO,KAAK;AACtB,SAAO,GAAG,UAAU,KAAK;AACzB,SAAO,GAAG,SAAS,KAAK;AACxB,WAAS,UAAU;AACf,WAAO,IAAI,QAAQ,SAAU,SAAS,QAAQ;AAC1C,UAAI;AACA,eAAO,OAAO,KAAK;AACvB,UAAI,KAAK;AACL,eAAO,QAAQ,EAAE,OAAO,KAAK,SAAS,MAAM,OAAO;AACvD,UAAI;AACA,eAAO,QAAQ,EAAE,OAAO,QAAW,MAAM,KAAI,CAAE;AACnD,cAAQ,KAAK,CAAC,SAAS,MAAM,CAAC;AAAA,IAC1C,CAAS;AAAA,EACT;AACI,MAAI,WAAW;AAAA,IACX,MAAM,WAAY;AACd,aAAO,QAAS;AAAA,IACnB;AAAA,EACJ;AACD,MAAI,2BAA2B;AAC3B,aAAS,OAAO,aAAa,IAAI,WAAY;AACzC,aAAO;AAAA,IACV;AAAA,EACT;AACI,SAAO;AACX;","names":[],"sources":["../../../../../../../../../../../../node_modules/@apollo/client/link/http/iterators/nodeStream.js"],"sourcesContent":["/**\n * Original source:\n * https://github.com/kmalakoff/response-iterator/blob/master/src/iterators/nodeStream.ts\n */\nimport { canUseAsyncIteratorSymbol } from \"../../../utilities/index.js\";\nexport default function nodeStreamIterator(stream) {\n    var cleanup = null;\n    var error = null;\n    var done = false;\n    var data = [];\n    var waiting = [];\n    function onData(chunk) {\n        if (error)\n            return;\n        if (waiting.length) {\n            var shiftedArr = waiting.shift();\n            if (Array.isArray(shiftedArr) && shiftedArr[0]) {\n                return shiftedArr[0]({ value: chunk, done: false });\n            }\n        }\n        data.push(chunk);\n    }\n    function onError(err) {\n        error = err;\n        var all = waiting.slice();\n        all.forEach(function (pair) {\n            pair[1](err);\n        });\n        !cleanup || cleanup();\n    }\n    function onEnd() {\n        done = true;\n        var all = waiting.slice();\n        all.forEach(function (pair) {\n            pair[0]({ value: undefined, done: true });\n        });\n        !cleanup || cleanup();\n    }\n    cleanup = function () {\n        cleanup = null;\n        stream.removeListener(\"data\", onData);\n        stream.removeListener(\"error\", onError);\n        stream.removeListener(\"end\", onEnd);\n        stream.removeListener(\"finish\", onEnd);\n        stream.removeListener(\"close\", onEnd);\n    };\n    stream.on(\"data\", onData);\n    stream.on(\"error\", onError);\n    stream.on(\"end\", onEnd);\n    stream.on(\"finish\", onEnd);\n    stream.on(\"close\", onEnd);\n    function getNext() {\n        return new Promise(function (resolve, reject) {\n            if (error)\n                return reject(error);\n            if (data.length)\n                return resolve({ value: data.shift(), done: false });\n            if (done)\n                return resolve({ value: undefined, done: true });\n            waiting.push([resolve, reject]);\n        });\n    }\n    var iterator = {\n        next: function () {\n            return getNext();\n        },\n    };\n    if (canUseAsyncIteratorSymbol) {\n        iterator[Symbol.asyncIterator] = function () {\n            return this;\n        };\n    }\n    return iterator;\n}\n//# sourceMappingURL=nodeStream.js.map"],"version":3}