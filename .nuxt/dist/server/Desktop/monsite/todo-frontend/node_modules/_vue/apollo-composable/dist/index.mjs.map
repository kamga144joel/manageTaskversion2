{"version":3,"file":"index.mjs","sources":["../../../../../../../../../../node_modules/@vue/apollo-composable/dist/index.mjs"],"sourcesContent":["// src/useApolloClient.ts\nimport { hasInjectionContext, inject } from \"vue-demi\";\nvar DefaultApolloClient = Symbol(\"default-apollo-client\");\nvar ApolloClients = Symbol(\"apollo-clients\");\nfunction resolveDefaultClient(providedApolloClients, providedApolloClient) {\n  const resolvedClient = providedApolloClients ? providedApolloClients.default : providedApolloClient != null ? providedApolloClient : void 0;\n  return resolvedClient;\n}\nfunction resolveClientWithId(providedApolloClients, clientId) {\n  return providedApolloClients == null ? void 0 : providedApolloClients[clientId];\n}\nfunction useApolloClient(clientId) {\n  let resolveImpl;\n  const savedCurrentClients = currentApolloClients;\n  if (!hasInjectionContext()) {\n    resolveImpl = (id) => {\n      if (id) {\n        return resolveClientWithId(savedCurrentClients, id);\n      }\n      return resolveDefaultClient(savedCurrentClients, savedCurrentClients.default);\n    };\n  } else {\n    const providedApolloClients = inject(ApolloClients, null);\n    const providedApolloClient = inject(DefaultApolloClient, null);\n    resolveImpl = (id) => {\n      if (id) {\n        const client2 = resolveClientWithId(providedApolloClients, id);\n        if (client2) {\n          return client2;\n        }\n        return resolveClientWithId(savedCurrentClients, id);\n      }\n      const client = resolveDefaultClient(providedApolloClients, providedApolloClient);\n      if (client) {\n        return client;\n      }\n      return resolveDefaultClient(savedCurrentClients, savedCurrentClients.default);\n    };\n  }\n  function resolveClient(id = clientId) {\n    const client = resolveImpl(id);\n    if (!client) {\n      throw new Error(\n        `Apollo client with id ${id != null ? id : \"default\"} not found. Use an app.runWithContext() or provideApolloClient() if you are outside of a component setup.`\n      );\n    }\n    return client;\n  }\n  return {\n    resolveClient,\n    get client() {\n      return resolveClient();\n    }\n  };\n}\nvar currentApolloClients = {};\nfunction provideApolloClient(client) {\n  currentApolloClients = {\n    default: client\n  };\n  return function(fn) {\n    const result = fn();\n    currentApolloClients = {};\n    return result;\n  };\n}\nfunction provideApolloClients(clients) {\n  currentApolloClients = clients;\n  return function(fn) {\n    const result = fn();\n    currentApolloClients = {};\n    return result;\n  };\n}\n\n// src/useLazyQuery.ts\nimport { isRef as isRef3 } from \"vue-demi\";\n\n// src/useQuery.ts\nimport { debounce, throttle } from \"throttle-debounce\";\nimport {\n  computed as computed3,\n  getCurrentInstance,\n  getCurrentScope as getCurrentScope2,\n  nextTick,\n  onScopeDispose as onScopeDispose2,\n  onServerPrefetch,\n  ref as ref3,\n  shallowRef,\n  unref,\n  watch as watch2\n} from \"vue-demi\";\n\n// src/util/env.ts\nvar isServer = typeof window === \"undefined\";\n\n// src/util/loadingTracking.ts\nimport { getCurrentScope, onScopeDispose, ref, watch } from \"vue-demi\";\nvar globalTracking = {\n  queries: ref(0),\n  mutations: ref(0),\n  subscriptions: ref(0),\n  components: /* @__PURE__ */ new Map()\n};\nfunction getCurrentTracking() {\n  const currentScope = getCurrentScope();\n  if (!currentScope) {\n    return {};\n  }\n  let tracking;\n  if (isServer) {\n    tracking = {\n      queries: ref(0),\n      mutations: ref(0),\n      subscriptions: ref(0)\n    };\n    return { tracking };\n  }\n  if (!globalTracking.components.has(currentScope)) {\n    globalTracking.components.set(currentScope, tracking = {\n      queries: ref(0),\n      mutations: ref(0),\n      subscriptions: ref(0)\n    });\n    onScopeDispose(() => {\n      globalTracking.components.delete(currentScope);\n    });\n  } else {\n    tracking = globalTracking.components.get(currentScope);\n  }\n  return {\n    tracking\n  };\n}\nfunction track(loading, type) {\n  if (isServer)\n    return;\n  const { tracking } = getCurrentTracking();\n  watch(loading, (value, oldValue) => {\n    if (oldValue != null && value !== oldValue) {\n      const mod = value ? 1 : -1;\n      if (tracking)\n        tracking[type].value += mod;\n      globalTracking[type].value += mod;\n    }\n  }, {\n    immediate: true\n  });\n  onScopeDispose(() => {\n    if (loading.value) {\n      if (tracking)\n        tracking[type].value--;\n      globalTracking[type].value--;\n    }\n  });\n}\nfunction trackQuery(loading) {\n  track(loading, \"queries\");\n}\nfunction trackMutation(loading) {\n  track(loading, \"mutations\");\n}\nfunction trackSubscription(loading) {\n  track(loading, \"subscriptions\");\n}\n\n// src/util/paramToReactive.ts\nimport { computed, isRef, reactive } from \"vue-demi\";\nfunction paramToReactive(param) {\n  if (isRef(param)) {\n    return param;\n  } else if (typeof param === \"function\") {\n    return computed(param);\n  } else if (param) {\n    return reactive(param);\n  } else {\n    return param;\n  }\n}\n\n// src/util/paramToRef.ts\nimport { computed as computed2, isRef as isRef2, ref as ref2 } from \"vue-demi\";\nfunction paramToRef(param) {\n  if (isRef2(param)) {\n    return param;\n  } else if (typeof param === \"function\") {\n    return computed2(param);\n  } else {\n    return ref2(param);\n  }\n}\n\n// src/util/toApolloError.ts\nimport { ApolloError, isApolloError } from \"@apollo/client/core/index.js\";\nfunction toApolloError(error) {\n  if (!(error instanceof Error)) {\n    return new ApolloError({\n      networkError: Object.assign(new Error(error == null ? void 0 : error.message), { originalError: error }),\n      errorMessage: String(error)\n    });\n  }\n  if (isApolloError(error)) {\n    return error;\n  }\n  return new ApolloError({ networkError: error, errorMessage: error.message });\n}\nfunction resultErrorsToApolloError(errors) {\n  return new ApolloError({\n    graphQLErrors: errors,\n    errorMessage: `GraphQL response contains errors: ${errors.map((e) => e.message).join(\" | \")}`\n  });\n}\n\n// src/util/useEventHook.ts\nfunction useEventHook() {\n  const fns = [];\n  function on(fn) {\n    fns.push(fn);\n    return {\n      off: () => off(fn)\n    };\n  }\n  function off(fn) {\n    const index = fns.indexOf(fn);\n    if (index !== -1) {\n      fns.splice(index, 1);\n    }\n  }\n  function trigger(...params) {\n    for (const fn of fns) {\n      fn(...params);\n    }\n  }\n  function getCount() {\n    return fns.length;\n  }\n  return {\n    on,\n    off,\n    trigger,\n    getCount\n  };\n}\n\n// src/useQuery.ts\nfunction useQuery(document, variables, options) {\n  return useQueryImpl(document, variables, options);\n}\nfunction useQueryImpl(document, variables, options = {}, lazy = false) {\n  var _a;\n  const currentScope = getCurrentScope2();\n  const currentInstance = getCurrentInstance();\n  const currentOptions = ref3();\n  const documentRef = paramToRef(document);\n  const variablesRef = paramToRef(variables);\n  const optionsRef = paramToReactive(options);\n  const result = shallowRef();\n  const resultEvent = useEventHook();\n  const error = shallowRef(null);\n  const errorEvent = useEventHook();\n  const loading = ref3(false);\n  currentScope && trackQuery(loading);\n  const networkStatus = ref3();\n  let firstResolve;\n  let firstResolveTriggered = false;\n  let firstReject;\n  let firstRejectError;\n  const tryFirstResolve = () => {\n    firstResolveTriggered = true;\n    if (firstResolve)\n      firstResolve();\n  };\n  const tryFirstReject = (apolloError) => {\n    firstRejectError = apolloError;\n    if (firstReject)\n      firstReject(apolloError);\n  };\n  const resetFirstResolveReject = () => {\n    firstResolve = void 0;\n    firstReject = void 0;\n    firstResolveTriggered = false;\n    firstRejectError = void 0;\n  };\n  currentInstance && ((_a = onServerPrefetch) == null ? void 0 : _a(() => {\n    var _a2;\n    if (!isEnabled.value || isServer && ((_a2 = currentOptions.value) == null ? void 0 : _a2.prefetch) === false)\n      return;\n    return new Promise((resolve, reject) => {\n      firstResolve = () => {\n        resetFirstResolveReject();\n        resolve();\n      };\n      firstReject = (apolloError) => {\n        resetFirstResolveReject();\n        reject(apolloError);\n      };\n      if (firstResolveTriggered) {\n        firstResolve();\n      } else if (firstRejectError) {\n        firstReject(firstRejectError);\n      }\n    }).finally(stop);\n  }));\n  const { resolveClient } = useApolloClient();\n  function getClient() {\n    var _a2;\n    return resolveClient((_a2 = currentOptions.value) == null ? void 0 : _a2.clientId);\n  }\n  const query = shallowRef();\n  let observer;\n  let started = false;\n  let ignoreNextResult = false;\n  let firstStart = true;\n  function start() {\n    var _a2, _b, _c, _d, _e;\n    if (started || !isEnabled.value || isServer && ((_a2 = currentOptions.value) == null ? void 0 : _a2.prefetch) === false || !currentDocument) {\n      tryFirstResolve();\n      return;\n    }\n    if (isServer) {\n      applyDocument(documentRef.value);\n      applyVariables(variablesRef.value);\n      applyOptions(unref(optionsRef));\n    }\n    started = true;\n    error.value = null;\n    loading.value = true;\n    const client = getClient();\n    query.value = client.watchQuery({\n      query: currentDocument,\n      variables: currentVariables != null ? currentVariables : {},\n      ...currentOptions.value,\n      ...isServer && ((_b = currentOptions.value) == null ? void 0 : _b.fetchPolicy) !== \"no-cache\" ? {\n        fetchPolicy: \"network-only\"\n      } : {}\n    });\n    startQuerySubscription();\n    if (!isServer && (firstStart || !((_c = currentOptions.value) == null ? void 0 : _c.keepPreviousResult)) && (((_d = currentOptions.value) == null ? void 0 : _d.fetchPolicy) !== \"no-cache\" || currentOptions.value.notifyOnNetworkStatusChange)) {\n      const currentResult = query.value.getCurrentResult(false);\n      if (!currentResult.loading || currentResult.partial || ((_e = currentOptions.value) == null ? void 0 : _e.notifyOnNetworkStatusChange)) {\n        onNextResult(currentResult);\n        ignoreNextResult = !currentResult.loading;\n      } else if (currentResult.error) {\n        onError(currentResult.error);\n        ignoreNextResult = true;\n      }\n    }\n    if (!isServer) {\n      for (const item of subscribeToMoreItems) {\n        addSubscribeToMore(item);\n      }\n    }\n    firstStart = false;\n  }\n  function startQuerySubscription() {\n    if (observer && !observer.closed)\n      return;\n    if (!query.value)\n      return;\n    ignoreNextResult = false;\n    observer = query.value.subscribe({\n      next: onNextResult,\n      error: onError\n    });\n  }\n  function getErrorPolicy() {\n    var _a2, _b, _c, _d;\n    const client = resolveClient((_a2 = currentOptions.value) == null ? void 0 : _a2.clientId);\n    return ((_b = currentOptions.value) == null ? void 0 : _b.errorPolicy) || ((_d = (_c = client.defaultOptions) == null ? void 0 : _c.watchQuery) == null ? void 0 : _d.errorPolicy);\n  }\n  function onNextResult(queryResult) {\n    var _a2;\n    if (ignoreNextResult) {\n      ignoreNextResult = false;\n      return;\n    }\n    error.value = null;\n    processNextResult(queryResult);\n    const errorPolicy = getErrorPolicy();\n    if (errorPolicy && errorPolicy === \"all\" && !queryResult.error && ((_a2 = queryResult.errors) == null ? void 0 : _a2.length)) {\n      processError(resultErrorsToApolloError(queryResult.errors));\n    }\n    tryFirstResolve();\n  }\n  function processNextResult(queryResult) {\n    var _a2, _b;\n    result.value = queryResult.data && Object.keys(queryResult.data).length === 0 ? queryResult.error && !((_a2 = currentOptions.value) == null ? void 0 : _a2.returnPartialData) && ((_b = currentOptions.value) == null ? void 0 : _b.errorPolicy) === \"none\" ? void 0 : result.value : queryResult.data;\n    loading.value = queryResult.loading;\n    networkStatus.value = queryResult.networkStatus;\n    nextTick(() => {\n      resultEvent.trigger(queryResult, {\n        client: getClient()\n      });\n    });\n  }\n  function onError(queryError) {\n    if (ignoreNextResult) {\n      ignoreNextResult = false;\n      return;\n    }\n    const apolloError = toApolloError(queryError);\n    const errorPolicy = getErrorPolicy();\n    if (errorPolicy && errorPolicy !== \"none\") {\n      processNextResult(query.value.getCurrentResult());\n    }\n    processError(apolloError);\n    tryFirstReject(apolloError);\n    resubscribeToQuery();\n  }\n  function processError(apolloError) {\n    error.value = apolloError;\n    loading.value = false;\n    networkStatus.value = 8;\n    nextTick(() => {\n      errorEvent.trigger(apolloError, {\n        client: getClient()\n      });\n    });\n  }\n  function resubscribeToQuery() {\n    if (!query.value)\n      return;\n    const lastError = query.value.getLastError();\n    const lastResult = query.value.getLastResult();\n    query.value.resetLastResults();\n    startQuerySubscription();\n    Object.assign(query.value, { lastError, lastResult });\n  }\n  let onStopHandlers = [];\n  function stop() {\n    tryFirstResolve();\n    if (!started)\n      return;\n    started = false;\n    loading.value = false;\n    onStopHandlers.forEach((handler) => handler());\n    onStopHandlers = [];\n    if (query.value) {\n      query.value.stopPolling();\n      query.value = null;\n    }\n    if (observer) {\n      observer.unsubscribe();\n      observer = void 0;\n    }\n  }\n  let restarting = false;\n  function baseRestart() {\n    if (!started || restarting)\n      return;\n    restarting = true;\n    nextTick(() => {\n      if (started) {\n        stop();\n        start();\n      }\n      restarting = false;\n    });\n  }\n  let debouncedRestart;\n  let isRestartDebounceSetup = false;\n  function updateRestartFn() {\n    var _a2, _b;\n    if (!currentOptions.value) {\n      debouncedRestart = baseRestart;\n    } else {\n      if ((_a2 = currentOptions.value) == null ? void 0 : _a2.throttle) {\n        debouncedRestart = throttle(currentOptions.value.throttle, baseRestart);\n      } else if ((_b = currentOptions.value) == null ? void 0 : _b.debounce) {\n        debouncedRestart = debounce(currentOptions.value.debounce, baseRestart);\n      } else {\n        debouncedRestart = baseRestart;\n      }\n      isRestartDebounceSetup = true;\n    }\n  }\n  function restart() {\n    if (!started || restarting)\n      return;\n    if (!isRestartDebounceSetup)\n      updateRestartFn();\n    debouncedRestart();\n  }\n  let currentDocument = documentRef.value;\n  const forceDisabled = ref3(lazy);\n  const enabledOption = computed3(() => !currentOptions.value || currentOptions.value.enabled == null || currentOptions.value.enabled);\n  const isEnabled = computed3(() => enabledOption.value && !forceDisabled.value && !!documentRef.value);\n  watch2(() => unref(optionsRef), applyOptions, {\n    deep: true,\n    immediate: true\n  });\n  function applyOptions(value) {\n    if (currentOptions.value && (currentOptions.value.throttle !== value.throttle || currentOptions.value.debounce !== value.debounce)) {\n      updateRestartFn();\n    }\n    currentOptions.value = value;\n    restart();\n  }\n  watch2(documentRef, applyDocument);\n  function applyDocument(value) {\n    currentDocument = value;\n    restart();\n  }\n  let currentVariables;\n  let currentVariablesSerialized;\n  watch2(() => {\n    if (isEnabled.value) {\n      return variablesRef.value;\n    } else {\n      return void 0;\n    }\n  }, applyVariables, {\n    deep: true,\n    immediate: true\n  });\n  function applyVariables(value) {\n    const serialized = JSON.stringify([value, isEnabled.value]);\n    if (serialized !== currentVariablesSerialized) {\n      currentVariables = value;\n      restart();\n    }\n    currentVariablesSerialized = serialized;\n  }\n  function refetch(variables2 = void 0) {\n    if (query.value) {\n      if (variables2) {\n        currentVariables = variables2;\n      }\n      error.value = null;\n      loading.value = true;\n      return query.value.refetch(variables2).then((refetchResult) => {\n        var _a2;\n        const currentResult = (_a2 = query.value) == null ? void 0 : _a2.getCurrentResult();\n        currentResult && processNextResult(currentResult);\n        return refetchResult;\n      });\n    }\n  }\n  function updateQuery(mapFn) {\n    if (query.value) {\n      query.value.updateQuery(mapFn);\n    }\n  }\n  function fetchMore(options2) {\n    if (query.value) {\n      error.value = null;\n      loading.value = true;\n      return query.value.fetchMore(options2).then((fetchMoreResult) => {\n        var _a2;\n        const currentResult = (_a2 = query.value) == null ? void 0 : _a2.getCurrentResult();\n        currentResult && processNextResult(currentResult);\n        return fetchMoreResult;\n      });\n    }\n  }\n  const subscribeToMoreItems = [];\n  function subscribeToMore(options2) {\n    if (isServer)\n      return;\n    const optionsRef2 = paramToRef(options2);\n    watch2(optionsRef2, (value, oldValue, onCleanup) => {\n      const index = subscribeToMoreItems.findIndex((item2) => item2.options === oldValue);\n      if (index !== -1) {\n        subscribeToMoreItems.splice(index, 1);\n      }\n      const item = {\n        options: value,\n        unsubscribeFns: []\n      };\n      subscribeToMoreItems.push(item);\n      addSubscribeToMore(item);\n      onCleanup(() => {\n        item.unsubscribeFns.forEach((fn) => fn());\n        item.unsubscribeFns = [];\n      });\n    }, {\n      immediate: true\n    });\n  }\n  function addSubscribeToMore(item) {\n    if (!started)\n      return;\n    if (!query.value) {\n      throw new Error(\"Query is not defined\");\n    }\n    const unsubscribe = query.value.subscribeToMore(item.options);\n    onStopHandlers.push(unsubscribe);\n    item.unsubscribeFns.push(unsubscribe);\n  }\n  watch2(isEnabled, (value) => {\n    if (value) {\n      nextTick(() => {\n        start();\n      });\n    } else {\n      stop();\n    }\n  });\n  if (isEnabled.value) {\n    start();\n  }\n  if (currentScope) {\n    onScopeDispose2(() => {\n      stop();\n      subscribeToMoreItems.length = 0;\n    });\n  } else {\n    console.warn(\"[Vue apollo] useQuery() is called outside of an active effect scope and the query will not be automatically stopped.\");\n  }\n  return {\n    result,\n    loading,\n    networkStatus,\n    error,\n    start,\n    stop,\n    restart,\n    forceDisabled,\n    document: documentRef,\n    variables: variablesRef,\n    options: optionsRef,\n    query,\n    refetch,\n    fetchMore,\n    subscribeToMore,\n    updateQuery,\n    onResult: resultEvent.on,\n    onError: errorEvent.on\n  };\n}\n\n// src/useLazyQuery.ts\nfunction useLazyQuery(document, variables, options) {\n  const query = useQueryImpl(document, variables, options, true);\n  function load(document2, variables2, options2) {\n    if (document2) {\n      query.document.value = document2;\n    }\n    if (variables2) {\n      query.variables.value = variables2;\n    }\n    if (options2) {\n      Object.assign(isRef3(query.options) ? query.options.value : query.options, options2);\n    }\n    const isFirstRun = query.forceDisabled.value;\n    if (isFirstRun) {\n      query.forceDisabled.value = false;\n      if (isServer) {\n        query.start();\n      }\n      return new Promise((resolve, reject) => {\n        const { off: offResult } = query.onResult((result) => {\n          if (!result.loading) {\n            resolve(result.data);\n            offResult();\n            offError();\n          }\n        });\n        const { off: offError } = query.onError((error) => {\n          reject(error);\n          offResult();\n          offError();\n        });\n      });\n    } else {\n      return false;\n    }\n  }\n  return {\n    ...query,\n    load\n  };\n}\n\n// src/useLoading.ts\nimport { computed as computed4 } from \"vue-demi\";\nfunction useQueryLoading() {\n  const { tracking } = getCurrentTracking();\n  if (!tracking)\n    throw new Error(\"useQueryLoading must be called inside a setup function.\");\n  return computed4(() => tracking.queries.value > 0);\n}\nfunction useMutationLoading() {\n  const { tracking } = getCurrentTracking();\n  if (!tracking)\n    throw new Error(\"useMutationLoading must be called inside a setup function.\");\n  return computed4(() => tracking.mutations.value > 0);\n}\nfunction useSubscriptionLoading() {\n  const { tracking } = getCurrentTracking();\n  if (!tracking)\n    throw new Error(\"useSubscriptionLoading must be called inside a setup function.\");\n  return computed4(() => tracking.subscriptions.value > 0);\n}\nfunction useGlobalQueryLoading() {\n  return computed4(() => globalTracking.queries.value > 0);\n}\nfunction useGlobalMutationLoading() {\n  return computed4(() => globalTracking.mutations.value > 0);\n}\nfunction useGlobalSubscriptionLoading() {\n  return computed4(() => globalTracking.subscriptions.value > 0);\n}\n\n// src/useMutation.ts\nimport { getCurrentScope as getCurrentScope3, isRef as isRef4, nextTick as nextTick2, onScopeDispose as onScopeDispose3, ref as ref4, shallowRef as shallowRef2 } from \"vue-demi\";\nfunction useMutation(document, options = {}) {\n  const currentScope = getCurrentScope3();\n  const loading = ref4(false);\n  currentScope && trackMutation(loading);\n  const error = shallowRef2(null);\n  const called = ref4(false);\n  const doneEvent = useEventHook();\n  const errorEvent = useEventHook();\n  const { resolveClient } = useApolloClient();\n  async function mutate(variables, overrideOptions = {}) {\n    let currentDocument;\n    if (typeof document === \"function\") {\n      currentDocument = document();\n    } else if (isRef4(document)) {\n      currentDocument = document.value;\n    } else {\n      currentDocument = document;\n    }\n    let currentOptions;\n    if (typeof options === \"function\") {\n      currentOptions = options();\n    } else if (isRef4(options)) {\n      currentOptions = options.value;\n    } else {\n      currentOptions = options;\n    }\n    const client = resolveClient(currentOptions.clientId);\n    error.value = null;\n    loading.value = true;\n    called.value = true;\n    try {\n      const result = await client.mutate({\n        mutation: currentDocument,\n        ...currentOptions,\n        ...overrideOptions,\n        variables: (variables != null ? variables : currentOptions.variables) ? {\n          ...currentOptions.variables,\n          ...variables\n        } : void 0\n      });\n      loading.value = false;\n      await nextTick2();\n      doneEvent.trigger(result, {\n        client\n      });\n      return result;\n    } catch (e) {\n      const apolloError = toApolloError(e);\n      error.value = apolloError;\n      loading.value = false;\n      await nextTick2();\n      errorEvent.trigger(apolloError, {\n        client\n      });\n      if (currentOptions.throws === \"always\" || currentOptions.throws !== \"never\" && !errorEvent.getCount()) {\n        throw apolloError;\n      }\n    }\n    return null;\n  }\n  currentScope && onScopeDispose3(() => {\n    loading.value = false;\n  });\n  return {\n    mutate,\n    loading,\n    error,\n    called,\n    onDone: doneEvent.on,\n    onError: errorEvent.on\n  };\n}\n\n// src/useResult.ts\nimport { computed as computed5 } from \"vue-demi\";\nfunction useResult(result, defaultValue, pick) {\n  console.warn(`'useResult' is deprecated and will be removed soon. Please use 'computed' instead.\nBefore:\nconst items = useResult(result, [], data => data.someField.myItems)\nAfter:\nconst items = computed(() => result.value?.someField.myItems ?? [])`);\n  return computed5(() => {\n    const value = result.value;\n    if (value) {\n      if (pick) {\n        try {\n          return pick(value);\n        } catch (e) {\n        }\n      } else {\n        const keys = Object.keys(value);\n        if (keys.length === 1) {\n          return value[keys[0]];\n        } else {\n          return value;\n        }\n      }\n    }\n    return defaultValue;\n  });\n}\n\n// src/useSubscription.ts\nimport { debounce as debounce2, throttle as throttle2 } from \"throttle-debounce\";\nimport {\n  computed as computed6,\n  getCurrentScope as getCurrentScope4,\n  isRef as isRef5,\n  nextTick as nextTick3,\n  onScopeDispose as onScopeDispose4,\n  ref as ref5,\n  shallowRef as shallowRef3,\n  watch as watch3\n} from \"vue-demi\";\nfunction useSubscription(document, variables = void 0, options = {}) {\n  const currentScope = getCurrentScope4();\n  const documentRef = paramToRef(document);\n  const variablesRef = paramToRef(variables);\n  const optionsRef = paramToReactive(options);\n  const result = shallowRef3();\n  const resultEvent = useEventHook();\n  const error = shallowRef3(null);\n  const errorEvent = useEventHook();\n  const loading = ref5(false);\n  currentScope && trackSubscription(loading);\n  const { resolveClient } = useApolloClient();\n  const subscription = ref5(null);\n  let observer = null;\n  let started = false;\n  function getClient() {\n    var _a;\n    return resolveClient((_a = currentOptions.value) == null ? void 0 : _a.clientId);\n  }\n  function start() {\n    if (started || !isEnabled.value || isServer)\n      return;\n    started = true;\n    loading.value = true;\n    const client = getClient();\n    subscription.value = client.subscribe({\n      query: currentDocument,\n      variables: currentVariables,\n      ...currentOptions.value\n    });\n    observer = subscription.value.subscribe({\n      next: onNextResult,\n      error: onError\n    });\n  }\n  function onNextResult(fetchResult) {\n    result.value = fetchResult.data;\n    loading.value = false;\n    resultEvent.trigger(fetchResult, {\n      client: getClient()\n    });\n  }\n  function onError(fetchError) {\n    const apolloError = toApolloError(fetchError);\n    error.value = apolloError;\n    loading.value = false;\n    errorEvent.trigger(apolloError, {\n      client: getClient()\n    });\n  }\n  function stop() {\n    if (!started)\n      return;\n    started = false;\n    loading.value = false;\n    if (subscription.value) {\n      subscription.value = null;\n    }\n    if (observer) {\n      observer.unsubscribe();\n      observer = null;\n    }\n  }\n  let restarting = false;\n  function baseRestart() {\n    if (!started || restarting)\n      return;\n    restarting = true;\n    nextTick3(() => {\n      if (started) {\n        stop();\n        start();\n      }\n      restarting = false;\n    });\n  }\n  let debouncedRestart;\n  function updateRestartFn() {\n    var _a, _b;\n    if ((_a = currentOptions.value) == null ? void 0 : _a.throttle) {\n      debouncedRestart = throttle2(currentOptions.value.throttle, baseRestart);\n    } else if ((_b = currentOptions.value) == null ? void 0 : _b.debounce) {\n      debouncedRestart = debounce2(currentOptions.value.debounce, baseRestart);\n    } else {\n      debouncedRestart = baseRestart;\n    }\n  }\n  function restart() {\n    if (!debouncedRestart)\n      updateRestartFn();\n    debouncedRestart();\n  }\n  const currentOptions = ref5();\n  watch3(() => isRef5(optionsRef) ? optionsRef.value : optionsRef, (value) => {\n    if (currentOptions.value && (currentOptions.value.throttle !== value.throttle || currentOptions.value.debounce !== value.debounce)) {\n      updateRestartFn();\n    }\n    currentOptions.value = value;\n    restart();\n  }, {\n    deep: true,\n    immediate: true\n  });\n  let currentDocument;\n  watch3(documentRef, (value) => {\n    currentDocument = value;\n    restart();\n  }, {\n    immediate: true\n  });\n  let currentVariables;\n  let currentVariablesSerialized;\n  watch3(variablesRef, (value, oldValue) => {\n    const serialized = JSON.stringify(value);\n    if (serialized !== currentVariablesSerialized) {\n      currentVariables = value;\n      restart();\n    }\n    currentVariablesSerialized = serialized;\n  }, {\n    deep: true,\n    immediate: true\n  });\n  const enabledOption = computed6(() => !currentOptions.value || currentOptions.value.enabled == null || currentOptions.value.enabled);\n  const isEnabled = enabledOption;\n  watch3(isEnabled, (value) => {\n    if (value) {\n      start();\n    } else {\n      stop();\n    }\n  }, {\n    immediate: true\n  });\n  if (currentScope) {\n    onScopeDispose4(stop);\n  } else {\n    console.warn(\"[Vue apollo] useSubscription() is called outside of an active effect scope and the subscription will not be automatically stopped.\");\n  }\n  return {\n    result,\n    loading,\n    error,\n    // @TODO doesn't fully work yet\n    // enabled,\n    start,\n    stop,\n    restart,\n    document: documentRef,\n    variables: variablesRef,\n    options: optionsRef,\n    subscription,\n    onResult: resultEvent.on,\n    onError: errorEvent.on\n  };\n}\nexport {\n  ApolloClients,\n  DefaultApolloClient,\n  provideApolloClient,\n  provideApolloClients,\n  useApolloClient,\n  useGlobalMutationLoading,\n  useGlobalQueryLoading,\n  useGlobalSubscriptionLoading,\n  useLazyQuery,\n  useMutation,\n  useMutationLoading,\n  useQuery,\n  useQueryLoading,\n  useResult,\n  useSubscription,\n  useSubscriptionLoading\n};\n//# sourceMappingURL=index.mjs.map\n"],"names":["isRef2","computed2","ref2","getCurrentScope2","ref3","computed3","watch2","onScopeDispose2","getCurrentScope3","ref4","shallowRef2","isRef4","nextTick2","onScopeDispose3"],"mappings":"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","x_google_ignoreList":[0]}