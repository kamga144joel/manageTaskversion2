{"file":"tache.vue.mjs","mappings":";;;;;;;;AA6IA,UAAM,mBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBxB,UAAM,qBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAW5B,UAAM,EAAoB,SAAS,iBAAiB,OAAO,cAAe,IAAG,YAAY,kBAAkB;AAE3G,UAAM,EAAE,QAAQ,SAAS,MAAO,IAAG,SAAS,kBAAkB,MAAM;AAAA,MAClE,aAAa;AAAA,IACf,CAAC;AAGD,UAAM,SAAS,SAAS;;AAAM,iCAAO,UAAP,mBAAc,WAAd,mBAAsB,eAAc;KAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["../../../../../../../pages/tache.vue"],"sourcesContent":["<template>\r\n  <div class=\"w-fuull md:w-1/2\">\r\n    <h1 class=\"text-2xl font-bold text-red-600 underline text-center\">Gestion des tâches</h1>\r\n    <!-- <input class=\"focus:border-light-blue-500 focus:ring-1 focus:ring-light-blue-500 focus:outline-none w-full text-sm text-black placeholder-gray-500 border border-gray-200 rounded-md py-2 pl-10\" type=\"text\" aria-label=\"Filter projects\" placeholder=\"Filter projects\" /> -->\r\n    </div>\r\n   <!-- creation des taches -->\r\n  <div>\r\n    <h2>Ajouter une tâche</h2>\r\n  <form>\r\n    <div>\r\n    <label> Titre:</label>\r\n    </div>\r\n    <input class=\" px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-slate-600\"\r\n     v-model=\"title\" type=\"text\" placeholder=\"Titre\"/>\r\n     <div>\r\n    <label>description:</label>\r\n    </div>\r\n    <input class=\" px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-slate-600\"\r\n     v-model=\"description\" type=\"text\" placeholder=\"Description\"/>\r\n    <div>\r\n    <label>Proprietaire</label>\r\n    </div>\r\n     <input   class=\" px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-slate-600\"         \r\n    v-model=\"owner\" type=\"text\" placeholder=\"Proprietaire\"/>\r\n      <div>\r\n    <button @click=\"addTache\">Ajouter</button>\r\n    </div>\r\n  </form>\r\n\r\n    <p v-if=\"addTacheLoading\">Ajout en cours...</p>\r\n    <p v-if=\"addTacheError\">Une erreur s'est produite : {{ addTacheError.message }}</p>\r\n  </div>\r\n  <div>\r\n  <h1 class=\"italic underline text-center text-neutral-950 font-medium\">informations des taches des utilisateurs</h1>\r\n  </div>\r\n\r\n   <div>\r\n    <p v-if=\"loading\" class=\"bg-yellow text-yellow  rounded\">Chargement en cours...</p>\r\n    <p v-if=\"error\">Une erreur s'est produite : {{ error.message }}</p>\r\n    <ul v-if=\"taches.length\">\r\n      <li v-for=\"tache in taches\" :key=\"tache.id\">\r\n        <table class=\"border text-center\">\r\n          <thead>\r\n            <tr>\r\n              <label for=\"owner\">Nom du propriétaire  </label>\r\n\r\n              <th>{{ tache.owner.name}} {{ tache.owner.username}}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          <tr class=\"border border-x border-y\">\r\n            <th>ID</th>\r\n            <td>{{ tache.id }}</td>\r\n          </tr>\r\n          <hr>\r\n          <tr class=\"border \">\r\n            <th>Tache</th>\r\n            <td>{{ tache.title }}</td>\r\n          </tr>\r\n          <tr class=\"border\">\r\n            <th>Statut</th>\r\n            <td>{{ tache.completed ? 'Terminée' : 'En cours' }}</td>\r\n          </tr>\r\n          <tr class=\"border\">\r\n            <th>Description</th>\r\n            <td>{{ tache.description}}</td>\r\n          </tr>\r\n\r\n          <tr class=\"border\">\r\n            <th>Prenom</th>\r\n            <td>{{ tache.owner.username }}</td>\r\n          </tr>\r\n          <tr class=\"border\">\r\n            <th>Nom</th>\r\n            <td>{{ tache.owner.name }}</td>\r\n          </tr>\r\n          <tr class=\"border\">\r\n            <th>Email de utilisateur</th>\r\n            <td>{{ tache.owner.email }}</td>\r\n          </tr>\r\n          </tbody>\r\n        </table>\r\n      </li>\r\n    </ul>\r\n    <p v-if=\"!loading && !error && taches.length === 0\">\r\n      Aucune tâche trouvée.\r\n    </p>\r\n  </div>\r\n  <div class=\"flex flex-col\">\r\n    <div class=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\r\n      <div class=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\r\n        <div class=\"shadow overflow-hidden border-b border-gray-200 dark:border-gray-700 sm:rounded-lg\">\r\n          <ul v-if=\"taches.length\">\r\n             <li v-for=\"tache in taches\" :key=\"tache.id\">\r\n          <table class=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\r\n            <thead class=\"bg-gray-50 dark:bg-gray-800\">\r\n              <nav>\r\n              <tr>\r\n                <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Nom du Proprietaire</th>\r\n                <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">tache</th>\r\n                <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Description</th>\r\n                <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">id</th>\r\n                <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Statut</th>\r\n                <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">prenom</th>\r\n                <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">nom</th>\r\n                <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Email</th>\r\n              </tr>\r\n              </nav>\r\n            </thead>\r\n            <tbody class=\"bg-white dark:bg-gray-900 divide-y divide-gray-200 dark:divide-gray-700\">\r\n              <tr>\r\n                <td scope=\"col\" class=\"px-6 py-4 whitespace-nowrap\">{{ tache.owner.name}} {{ tache.owner.username}}</td>\r\n                <td scope=\"col\" class=\"px-6 py-4 whitespace-nowrap\">{{ tache.title }}</td>\r\n                <td scope=\"col\" class=\"px-6 py-4 whitespace-nowrap\">{{ tache.description}}</td>\r\n                <td scope=\"col\" class=\"px-6 py-4 whitespace-nowrap\">{{ tache.id}}</td>\r\n                <td scope=\"col\" class=\"px-6 py-4 whitespace-nowrap\">{{ tache.owner.name }}</td>\r\n                <td scope=\"col\" class=\"px-6 py-4 whitespace-nowrap\">{{ tache.owner.username }}</td>\r\n                <td scope=\"col\" class=\"px-6 py-4 whitespace-nowrap\">{{ tache.owner.email }}</td>\r\n\r\n                <td class=\"px-6 py-4 whitespace-nowrap\">\r\n                  <span class=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200\">{{ tache.completed ? 'Terminée' : 'En cours' }}</span>\r\n                </td>\r\n              </tr>\r\n              <!-- Autres lignes... -->\r\n            </tbody>\r\n          </table>\r\n          </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n   </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from 'vue'\r\nimport { useQuery, useMutation } from '@vue/apollo-composable'\r\nimport {onMounted} from 'vue'\r\nimport {gql} from 'graphql-tag'\r\n\r\n// Définition de la requête GraphQL\r\nconst GET_TACHES_QUERY = gql`\r\n  query {\r\n    taches {\r\n      collection {\r\n        id\r\n        title\r\n        completed\r\n        description\r\n        owner {\r\n          name\r\n          username\r\n          email\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n const ADD_TACHE_MUTATION = gql`\r\n   mutation AddTache($title: String!, $description: String!, $ownerId: ID!) {\r\n     addTache(input: { title: $title, description: $description, owner: $owner, completed: $completed }) {\r\n       title\r\n       description\r\n       completed\r\n       owner  \r\n     }\r\n   }\r\n`\r\n// Utilisation de la mutation\r\nconst { mutate: addTache, loading: addTacheLoading, error: addTacheError } = useMutation(ADD_TACHE_MUTATION)\r\n// Exécuter la requête\r\nconst { result, loading, error } = useQuery(GET_TACHES_QUERY, null, {\r\n  fetchPolicy: 'cache-and-network'\r\n})\r\n\r\n// Calculer les tâches à partir du résultat  \r\nconst taches = computed(() => result.value?.taches?.collection || [])\r\n\r\n</script>\r\n\r\n\r\n"],"version":3}