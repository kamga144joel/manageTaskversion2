{"version":3,"file":"auth.mjs","sources":["../../../../stores/auth.ts"],"sourcesContent":["// stores/auth.ts\r\nimport { defineStore, storeToRefs } from 'pinia';\r\nimport { useCookie, useFetch } from '#app';\r\n\r\nexport const useAuthStore = defineStore('auth', () => {\r\n  const token = ref<string | null>(null);\r\n  const user = ref<any>(null);\r\n  const isAuthenticated = ref(false);\r\n  const tokenExpiration = ref<Date | null>(null);\r\n  const error = ref<string | null>(null);\r\n\r\n  const authCookie = useCookie<string | null>('auth_token', {\r\n    maxAge: 60 * 60 * 24 * 7,\r\n    secure: process.env.NODE_ENV === 'production',\r\n    sameSite: 'strict'\r\n  });\r\n\r\n  const isTokenExpired = computed(() => {\r\n    if (!tokenExpiration.value) return true;\r\n    return tokenExpiration.value < new Date();\r\n  });\r\n\r\n  const hasError = computed(() => !!error.value);\r\n\r\n  async function setToken(newToken: string) {\r\n    try {\r\n      token.value = newToken;\r\n      isAuthenticated.value = true;\r\n      error.value = null;\r\n\r\n      authCookie.value = newToken;\r\n\r\n      const expirationDate = new Date();\r\n      expirationDate.setDate(expirationDate.getDate() + 7);\r\n      tokenExpiration.value = expirationDate;\r\n\r\n      await fetchUser();\r\n    } catch (err) {\r\n      error.value = err instanceof Error ? err.message : 'Erreur lors de la connexion';\r\n      logout();\r\n    }\r\n  }\r\n\r\n  async function fetchUser() {\r\n    try {\r\n      const { data } = await useFetch('/api/user/me', {\r\n        headers: token.value ? { \r\n          Authorization: `Bearer ${token.value}` \r\n        } : {},\r\n      });\r\n      user.value = data.value;\r\n    } catch (err) {\r\n      error.value = err instanceof Error ? err.message : 'Erreur lors de la récupération des informations utilisateur';\r\n      logout();\r\n    }\r\n  }\r\n\r\n  function logout() {\r\n    token.value = null;\r\n    user.value = null;\r\n    isAuthenticated.value = false;\r\n    tokenExpiration.value = null;\r\n    error.value = null;\r\n    authCookie.value = null;\r\n    localStorage.removeItem('auth_token');\r\n  }\r\n\r\n  async function refreshToken() {\r\n    try {\r\n      const { data } = await useFetch('/api/auth/refresh', {\r\n        headers: token.value ? { \r\n          Authorization: `Bearer ${token.value}` \r\n        } : {},\r\n      });\r\n      if (data.value) {\r\n        await setToken(data.value as string);\r\n      }\r\n    } catch (err) {\r\n      error.value = err instanceof Error ? err.message : 'Erreur lors du rafraîchissement du token';\r\n      logout();\r\n    }\r\n  }\r\n\r\n  return {\r\n    token,\r\n    user,\r\n    isAuthenticated,\r\n    tokenExpiration,\r\n    error,\r\n    isTokenExpired,\r\n    hasError,\r\n    setToken,\r\n    fetchUser,\r\n    logout,\r\n    refreshToken,\r\n  };\r\n});\r\n"],"names":[],"mappings":";;;;;;;;AAIa,MAAA,eAAe,YAAY,QAAQ,MAAM;AAC9C,QAAA,QAAQ,IAAmB,IAAI;AAC/B,QAAA,OAAO,IAAS,IAAI;AACpB,QAAA,kBAAkB,IAAI,KAAK;AAC3B,QAAA,kBAAkB,IAAiB,IAAI;AACvC,QAAA,QAAQ,IAAmB,IAAI;AAE/B,QAAA,aAAa,UAAyB,cAAc;AAAA,IACxD,QAAQ,KAAK,KAAK,KAAK;AAAA,IACvB,QAAQ,QAAQ,IAAI,aAAa;AAAA,IACjC,UAAU;AAAA,EAAA,CACX;AAEK,QAAA,iBAAiB,SAAS,MAAM;AAChC,QAAA,CAAC,gBAAgB,MAAc,QAAA;AAC5B,WAAA,gBAAgB,QAAQ,oBAAI,KAAK;AAAA,EAAA,CACzC;AAED,QAAM,WAAW,SAAS,MAAM,CAAC,CAAC,MAAM,KAAK;AAE7C,iBAAe,SAAS,UAAkB;AACpC,QAAA;AACF,YAAM,QAAQ;AACd,sBAAgB,QAAQ;AACxB,YAAM,QAAQ;AAEd,iBAAW,QAAQ;AAEb,YAAA,qCAAqB,KAAK;AAChC,qBAAe,QAAQ,eAAe,QAAQ,IAAI,CAAC;AACnD,sBAAgB,QAAQ;AAExB,YAAM,UAAU;AAAA,aACT,KAAK;AACZ,YAAM,QAAQ,eAAe,QAAQ,IAAI,UAAU;AAC5C,aAAA;AAAA,IAAA;AAAA,EACT;AAGF,iBAAe,YAAY;AACrB,QAAA;AACF,YAAM,EAAE,KAAA,IAAS,MAAM,SAAS,gBAAgB;AAAA,QAC9C,SAAS,MAAM,QAAQ;AAAA,UACrB,eAAe,UAAU,MAAM,KAAK;AAAA,QAAA,IAClC,CAAA;AAAA,sBACL;AACD,WAAK,QAAQ,KAAK;AAAA,aACX,KAAK;AACZ,YAAM,QAAQ,eAAe,QAAQ,IAAI,UAAU;AAC5C,aAAA;AAAA,IAAA;AAAA,EACT;AAGF,WAAS,SAAS;AAChB,UAAM,QAAQ;AACd,SAAK,QAAQ;AACb,oBAAgB,QAAQ;AACxB,oBAAgB,QAAQ;AACxB,UAAM,QAAQ;AACd,eAAW,QAAQ;AACnB,iBAAa,WAAW,YAAY;AAAA,EAAA;AAGtC,iBAAe,eAAe;AACxB,QAAA;AACF,YAAM,EAAE,KAAA,IAAS,MAAM,SAAS,qBAAqB;AAAA,QACnD,SAAS,MAAM,QAAQ;AAAA,UACrB,eAAe,UAAU,MAAM,KAAK;AAAA,QAAA,IAClC,CAAA;AAAA,sBACL;AACD,UAAI,KAAK,OAAO;AACR,cAAA,SAAS,KAAK,KAAe;AAAA,MAAA;AAAA,aAE9B,KAAK;AACZ,YAAM,QAAQ,eAAe,QAAQ,IAAI,UAAU;AAC5C,aAAA;AAAA,IAAA;AAAA,EACT;AAGK,SAAA;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF,CAAC;"}